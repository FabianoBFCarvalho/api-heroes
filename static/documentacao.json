{
  "swagger": "2.0",
  "info": {
    "description": "Hero API",
    "version": "1.0.0",
    "title": "Hero API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "bruno-chikuji@hotmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "api-default-309921.rj.r.appspot.com",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/heroes": {
      "post": {
        "tags": [
          "Hero"
        ],
        "summary": "Add new hero",
        "description": "",
        "operationId": "addHero",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Hero json",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hero": {
                  "$ref": "#/definitions/Hero"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Hero"
        ],
        "summary": "Get heroes list",
        "description": "",
        "operationId": "getHeroes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "heroes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Hero"
                  }
                },
                "cursor": {
                  "type": "string",
                  "example": "drfwegfdgdfgdfhgdf"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Hero not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/hero/{heroId}": {
      "get": {
        "tags": [
          "Hero"
        ],
        "summary": "Find hero by ID",
        "description": "Returns a single hero",
        "operationId": "getHeroById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "heroId",
            "in": "path",
            "description": "ID of hero to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Hero"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Hero not found"
          }
        }
      },
      "post": {
        "tags": [
          "Hero"
        ],
        "summary": "Updates a hero",
        "description": "",
        "operationId": "updateHero",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "heroId",
            "in": "path",
            "description": "ID of hero that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Hero json",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hero": {
                  "$ref": "#/definitions/Hero"
                }
              }
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "Hero"
        ],
        "summary": "Deletes a hero",
        "description": "",
        "operationId": "deleteHero",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "heroId",
            "in": "path",
            "description": "Hero id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Hero not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Hero": {
      "type": "object",
      "required": [
        "name",
        "universe"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "fsertsdgfdg"
        },
        "name": {
          "type": "string",
          "example": "Flash"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://teste.com.br/image.jpg"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "universe": {
          "type": "string",
          "description": "Universe",
          "enum": [
            "dc",
            "marvel"
          ]
        }
      },
      "xml": {
        "name": "Hero"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
